<div id="map" style="height: 400px; width: 100%;"></div>
<script>
  let map;
  let infowindow;

  async function initMap() {
    infowindow = new google.maps.InfoWindow();
    map = new google.maps.Map(document.getElementById("map"), {
      zoom: 15
    });


    const geocoder = new google.maps.Geocoder();
    const bounds = new google.maps.LatLngBounds();
    const hotelAddresses = <%= @hotel_apis.map { |hotel| "#{hotel[:address1]}, #{hotel[:address2]}" }.to_json.html_safe %>;

for (let i = 0; i < hotelAddresses.length; i++) {
      const address = hotelAddresses[i];
      await new Promise((resolve, reject) => {
        geocoder.geocode({ 'address': address }, (results, status) => {
          if (status === 'OK' && results) {
            const result = results[0];
            createMarker(result,  <%= @hotel_apis.to_json.html_safe %>[i]); // ホテルのインデックスを渡す
            bounds.extend(result.geometry.location);
            resolve();
          } else {
            reject(new Error('Geocode was not successful for the following reason: ' + status));
          }
        });
      });
    }

  map.fitBounds(bounds);
}

  function createMarker(place,hotelInfo) {
    const marker = new google.maps.Marker({
      map: map,
      position: place.geometry.location
    });

    google.maps.event.addListener(marker, "mouseover", function() {
      infowindow.setContent(`<p>${hotelInfo.hotel_name}</p>`);
      infowindow.open(map, marker);
    });

    google.maps.event.addListener(marker, "click", function() {
    // ウィンドウにホテル名と詳細ボタンを表示
    infowindow.setContent(`<p>${hotelInfo.hotel_name}</p><button id="detailButton">★宿情報を見る</button>`);
    infowindow.open(map, marker);
    // ウィンドウが開いた後に、宿情報ボタンがクリックされたときの処理
    google.maps.event.addListenerOnce(infowindow, 'domready', () => {
    document.getElementById('detailButton').addEventListener('click', () => {
      const card = document.querySelector(`[data-hotel-name="${hotelInfo.hotel_name}"]`);
        if (card) {
          card.classList.add("highlighted-card");
          card.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
      });
    });
  });
}
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['google_api'] %>&callback=initMap" async defer></script>